<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns2="http://www.westernunion.com/eai/common/cuf.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns="http://schemas.tibco.com/bw/plugins/java/5.0/javaExceptions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd">
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" schemaLocation="/UtilityServices/SharedResources/SchemaDefinitions/Common/RequestHeader.xsd"/>
    <pd:name>UtilityServices/SharedResources/JavaCode/CompressData.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:Header"/>
                    <xsd:element name="InputString" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="exists($_error_Compress-Data)">
                <Output>
                    <IsCompressed>
                        <xsl:value-of select="false()"/>
                    </IsCompressed>
                    <Message>
                        <xsl:value-of select="$_error_Compress-Data/ns:InvocationException/exceptionMessage"/>
                    </Message>
                </Output>
            </xsl:when>
            <xsl:otherwise>
                <Output>
                    <IsCompressed>
                        <xsl:value-of select="$Compress-Data/javaCodeActivityOutput/IsCompressed"/>
                    </IsCompressed>
                    <xsl:if test="$Compress-Data/javaCodeActivityOutput/OutputBinary">
                        <OutputBinary>
                            <xsl:value-of select="$Compress-Data/javaCodeActivityOutput/OutputBinary"/>
                        </OutputBinary>
                    </xsl:if>
                    <Message>
                        <xsl:value-of select="$Compress-Data/javaCodeActivityOutput/Message"/>
                    </Message>
                </Output>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="IsCompressed" type="xsd:boolean"/>
                    <xsd:element name="OutputBinary" type="xsd:base64Binary" minOccurs="0"/>
                    <xsd:element name="Message" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>450</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1359956895548</pd:targetNamespace>
    <pd:activity name="Compress Data">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>301</pd:x>
        <pd:y>63</pd:y>
        <config>
            <fileName>CompressDataCompressData</fileName>
            <packageName>UtilityServices.SharedResources.JavaCode.CompressData</packageName>
            <fullsource>package UtilityServices.SharedResources.JavaCode.CompressData;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.zip.Deflater;
public class CompressDataCompressData{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String InputString = "";
	protected boolean IsCompressed = false;
	protected byte[] OutputBinary = null;
	protected String Message = "";
	public String getInputString() {
		return InputString;
	}
	public void setInputString(String val) {
		InputString = val;
	}
	public boolean getIsCompressed() {
		return IsCompressed;
	}
	public void setIsCompressed(boolean val) {
		IsCompressed = val;
	}
	public byte[] getOutputBinary() {
		return OutputBinary;
	}
	public void setOutputBinary(byte[] val) {
		OutputBinary = val;
	}
	public String getMessage() {
		return Message;
	}
	public void setMessage(String val) {
		Message = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public CompressDataCompressData() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String InputString
	Out : boolean IsCompressed
	Out : byte[] OutputBinary
	Out : String Message
* Available Variables: DO NOT MODIFY *****/

		byte[] inputByte = InputString.getBytes("UTF-8");
		Deflater compressor = new Deflater();
		compressor.setInput(inputByte);

		try {
			// Create an expandable byte array to hold the compressed data
			ByteArrayOutputStream bos = new ByteArrayOutputStream(inputByte.length);
			compressor.finish();

			// Compress the data
			byte[] buf = new byte[1024];
			while(!compressor.finished()) {
				int count = compressor.deflate(buf);
				bos.write(buf, 0, count);
			}
			bos.close();
			OutputBinary = bos.toByteArray();
			IsCompressed = true;
			Message = "Success";
		} catch (UnsupportedEncodingException e) {
			Message = e.toString();
		} catch (IOException e) {
			Message = e.toString();
		}
	}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>InputString</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>IsCompressed</fieldName>
                    <fieldType>boolean</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>OutputBinary</fieldName>
                    <fieldType>binary</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>Message</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>CompressDataCompressData</name>
                    <byteCode>yv66vgAAADMAaAkAGQBACQAZAEEJABkAQgkAGQBDCgAaAEQIAEUIAEYKAEcASAcASQoACQBECgAJAEoHAEsKAAwATAoACQBNCgAJAE4KAAkATwoADABQCgAMAFEKAAwAUggAUwcAVAoAFQBVBwBWCgAXAFUHAFcHAFgBAAtJbnB1dFN0cmluZwEAEkxqYXZhL2xhbmcvU3RyaW5nOwEADElzQ29tcHJlc3NlZAEAAVoBAAxPdXRwdXRCaW5hcnkBAAJbQgEAB01lc3NhZ2UBAA5nZXRJbnB1dFN0cmluZwEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEADnNldElucHV0U3RyaW5nAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAPZ2V0SXNDb21wcmVzc2VkAQADKClaAQAPc2V0SXNDb21wcmVzc2VkAQAEKFopVgEAD2dldE91dHB1dEJpbmFyeQEABCgpW0IBAA9zZXRPdXRwdXRCaW5hcnkBAAUoW0IpVgEACmdldE1lc3NhZ2UBAApzZXRNZXNzYWdlAQAGPGluaXQ+AQADKClWAQAGaW52b2tlAQANU3RhY2tNYXBUYWJsZQcAVwcAIAcASQcASwcAVAcAVgEACkV4Y2VwdGlvbnMHAFkBAApTb3VyY2VGaWxlAQAdQ29tcHJlc3NEYXRhQ29tcHJlc3NEYXRhLmphdmEMABsAHAwAHQAeDAAfACAMACEAHAwAMgAzAQAAAQAFVVRGLTgHAFoMAFsAXAEAFmphdmEvdXRpbC96aXAvRGVmbGF0ZXIMAF0ALwEAHWphdmEvaW8vQnl0ZUFycmF5T3V0cHV0U3RyZWFtDAAyAF4MAF8AMwwAYAApDABhAGIMAGMAZAwAZQAzDABmAC0BAAdTdWNjZXNzAQAkamF2YS9pby9VbnN1cHBvcnRlZEVuY29kaW5nRXhjZXB0aW9uDABnACMBABNqYXZhL2lvL0lPRXhjZXB0aW9uAQBOVXRpbGl0eVNlcnZpY2VzL1NoYXJlZFJlc291cmNlcy9KYXZhQ29kZS9Db21wcmVzc0RhdGEvQ29tcHJlc3NEYXRhQ29tcHJlc3NEYXRhAQAQamF2YS9sYW5nL09iamVjdAEAE2phdmEvbGFuZy9FeGNlcHRpb24BABBqYXZhL2xhbmcvU3RyaW5nAQAIZ2V0Qnl0ZXMBABYoTGphdmEvbGFuZy9TdHJpbmc7KVtCAQAIc2V0SW5wdXQBAAQoSSlWAQAGZmluaXNoAQAIZmluaXNoZWQBAAdkZWZsYXRlAQAFKFtCKUkBAAV3cml0ZQEAByhbQklJKVYBAAVjbG9zZQEAC3RvQnl0ZUFycmF5AQAIdG9TdHJpbmcAIQAZABoAAAAEAAQAGwAcAAAABAAdAB4AAAAEAB8AIAAAAAQAIQAcAAAACgABACIAIwABACQAAAAdAAEAAQAAAAUqtAABsAAAAAEAJQAAAAYAAQAAAA0AAQAmACcAAQAkAAAAIgACAAIAAAAGKiu1AAGxAAAAAQAlAAAACgACAAAAEAAFABEAAQAoACkAAQAkAAAAHQABAAEAAAAFKrQAAqwAAAABACUAAAAGAAEAAAATAAEAKgArAAEAJAAAACIAAgACAAAABiobtQACsQAAAAEAJQAAAAoAAgAAABYABQAXAAEALAAtAAEAJAAAAB0AAQABAAAABSq0AAOwAAAAAQAlAAAABgABAAAAGQABAC4ALwABACQAAAAiAAIAAgAAAAYqK7UAA7EAAAABACUAAAAKAAIAAAAcAAUAHQABADAAIwABACQAAAAdAAEAAQAAAAUqtAAEsAAAAAEAJQAAAAYAAQAAAB8AAQAxACcAAQAkAAAAIgACAAIAAAAGKiu1AASxAAAAAQAlAAAACgACAAAAIgAFACMAAQAyADMAAQAkAAAARwACAAEAAAAbKrcABSoSBrUAASoDtQACKgG1AAMqEga1AASxAAAAAQAlAAAAGgAGAAAAJQAEAAgACgAJAA8ACgAUAAsAGgAmAAEANAAzAAIAJAAAASYABAAGAAAAdyq0AAESB7YACEy7AAlZtwAKTSwrtgALuwAMWSu+twANTiy2AA4RBAC8CDoELLYAD5oAFywZBLYAEDYFLRkEAxUFtgARp//oLbYAEiottgATtQADKgS1AAIqEhS1AASnABhOKi22ABa1AASnAAxOKi22ABi1AASxAAIAFwBeAGEAFQAXAF4AbQAXAAIAJQAAAFYAFQAAAC8ACgAwABIAMQAXADUAIQA2ACUAOQAsADoAMwA7ADsAPABEAD0ARwA+AEsAPwBTAEAAWABBAF4ARgBhAEIAYgBDAGoARgBtAEQAbgBFAHYARwA1AAAAMQAF/wAsAAUHADYHADcHADgHADkHADcAABr/ABkAAwcANgcANwcAOAABBwA6SwcAOwgAPAAAAAQAAQA9AAEAPgAAAAIAPw==</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <InputString>
                    <xsl:value-of select="$Start/Input/InputString"/>
                </InputString>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log Exception">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>302</pd:x>
        <pd:y>197</pd:y>
        <config>
            <processName>/UtilityServices/Logging/LogException.process</processName>
        </config>
        <pd:inputBindings>
            <ns2:ErrorSchema>
                <ns2:ProcessName>
                    <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId)"/>
                </ns2:ProcessName>
                <ns2:CLELogging>
                    <xsl:value-of select="false()"/>
                </ns2:CLELogging>
                <ns2:ExceptionDateTime>
                    <xsl:value-of select="current-dateTime()"/>
                </ns2:ExceptionDateTime>
                <xsl:copy-of select="$Start/Input/pfx:Header"/>
                <ns2:ErrorReport>
                    <ns2:StackTrace>
                        <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                    </ns2:StackTrace>
                    <ns2:Msg>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </ns2:Msg>
                    <ns2:FullClass>
                        <xsl:value-of select="$_error/ns1:ErrorReport/FullClass"/>
                    </ns2:FullClass>
                    <ns2:Class>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Class"/>
                    </ns2:Class>
                    <ns2:ProcessStack>
                        <xsl:value-of select="$_error/ns1:ErrorReport/ProcessStack"/>
                    </ns2:ProcessStack>
                    <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                        <ns2:MsgCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </ns2:MsgCode>
                    </xsl:if>
                    <ns2:Data>
                        <xsl:copy-of select="$_error/ns1:ErrorReport/Data/*"/>
                    </ns2:Data>
                </ns2:ErrorReport>
                <ns2:ErrorMessage>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </ns2:ErrorMessage>
            </ns2:ErrorSchema>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Compress Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Compress Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Compress Data</pd:from>
        <pd:to>Log Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Exception</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>