<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:Util="java://com.eai.cuf.Util" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns3="http://www.tibco.com/pe/CheckpointSchema" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx="http://www.westernunion.com/eai/common/cuf.xsd">
    <xsd:import namespace="http://www.westernunion.com/eai/common/cuf.xsd" schemaLocation="/UtilityServices/SharedResources/SchemaDefinitions/Common/CUF.xsd"/>
    <pd:name>UtilityServices/Patterns/HeavyPattern/MainProcess.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:MainProcessInput"/>
    <pd:startX>103</pd:startX>
    <pd:startY>253</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="exists($Log-Exception)">
                <pfx:MainProcessOutput>
                    <pfx:Output>
                        <xsl:copy-of select="$Log-Exception/pfx:ErrorSchema"/>
                    </pfx:Output>
                    <pfx:Status>
                        <xsl:value-of select="1"/>
                    </pfx:Status>
                </pfx:MainProcessOutput>
            </xsl:when>
            <xsl:when test="exists($Log-Error)">
                <pfx:MainProcessOutput>
                    <pfx:Output>
                        <xsl:copy-of select="$Log-Error/pfx:ErrorSchema"/>
                    </pfx:Output>
                    <pfx:Status>
                        <xsl:value-of select="1"/>
                    </pfx:Status>
                </pfx:MainProcessOutput>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$Call-Actual-Process/pfx:MainProcessOutput"/>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx:MainProcessOutput"/>
    <pd:endX>983</pd:endX>
    <pd:endY>248</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <InputSchema>
            <xsd:element name="transaction">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="startTime" type="xsd:long"/>
                        <xsd:element name="transactionId" type="xsd:string"/>
                        <xsd:element name="objectId" type="xsd:string"/>
                        <xsd:element name="inputXML" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </InputSchema>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1358267251616</pd:targetNamespace>
    <pd:activity name="Log Exception">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>982</pd:x>
        <pd:y>395</pd:y>
        <config>
            <processName>/UtilityServices/Logging/LogException.process</processName>
        </config>
        <pd:inputBindings>
            <pfx:ErrorSchema>
                <pfx:ProcessName>
                    <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId)"/>
                </pfx:ProcessName>
                <pfx:CLELogging>
                    <xsl:value-of select="false()"/>
                </pfx:CLELogging>
                <pfx:ExceptionDateTime>
                    <xsl:value-of select="current-dateTime()"/>
                </pfx:ExceptionDateTime>
                <ns:Header>
                    <ns:ApplicationID>
                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ApplicationID"/>
                    </ns:ApplicationID>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName">
                        <ns:ComponentName>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName"/>
                        </ns:ComponentName>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname">
                        <ns:Hostname>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname"/>
                        </ns:Hostname>
                    </xsl:if>
                    <ns:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns:Timestamp>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain">
                        <ns:TransactionDomain>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain"/>
                        </ns:TransactionDomain>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType">
                        <ns:TransactionType>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType"/>
                        </ns:TransactionType>
                    </xsl:if>
                    <ns:TransactionID>
                        <xsl:value-of select="$InputSchema/transaction/transactionId"/>
                    </ns:TransactionID>
                    <xsl:if test="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID">
                        <ns:CorrelationID>
                            <xsl:value-of select="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID"/>
                        </ns:CorrelationID>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID">
                        <ns:InterfaceID>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID"/>
                        </ns:InterfaceID>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Filename">
                        <ns:Filename>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Filename"/>
                        </ns:Filename>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Message">
                        <ns:Message>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Message"/>
                        </ns:Message>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID">
                        <ns:RenderID>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID"/>
                        </ns:RenderID>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding">
                        <ns:DataEncoding>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding"/>
                        </ns:DataEncoding>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Transaction">
                        <ns:Transaction>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Transaction"/>
                        </ns:Transaction>
                    </xsl:if>
                    <xsl:copy-of select="$Start/pfx:MainProcessInput/ns:Header/ns:AltKey"/>
                </ns:Header>
                <pfx:ErrorReport>
                    <pfx:StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </pfx:StackTrace>
                    <pfx:Msg>
                        <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                    </pfx:Msg>
                    <pfx:FullClass>
                        <xsl:value-of select="$_error/ns2:ErrorReport/FullClass"/>
                    </pfx:FullClass>
                    <pfx:Class>
                        <xsl:value-of select="$_error/ns2:ErrorReport/Class"/>
                    </pfx:Class>
                    <pfx:ProcessStack>
                        <xsl:value-of select="$_error/ns2:ErrorReport/ProcessStack"/>
                    </pfx:ProcessStack>
                    <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                        <pfx:MsgCode>
                            <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                        </pfx:MsgCode>
                    </xsl:if>
                    <pfx:Data>
                        <xsl:copy-of select="$_error/ns2:ErrorReport/Data/*"/>
                    </pfx:Data>
                </pfx:ErrorReport>
                <pfx:ErrorMessage>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </pfx:ErrorMessage>
            </pfx:ErrorSchema>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Stop Engine">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1094</pd:x>
        <pd:y>246</pd:y>
        <config>
            <processName>/UtilityServices/Initialization/KillProcess.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:group name="Catch Exception">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>190</pd:x>
        <pd:y>1</pd:y>
        <pd:width>710</pd:width>
        <pd:height>484</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Assign</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ShutDown</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Assign</pd:from>
            <pd:to>StartUp</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>StartUp</pd:from>
            <pd:to>Audit Start</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Audit Start</pd:from>
            <pd:to>Begin Checkpoint</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log Error</pd:from>
            <pd:to>End Checkpoint</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Audit End</pd:from>
            <pd:to>ShutDown</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Begin Checkpoint</pd:from>
            <pd:to>Repeat on Error</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Repeat on Error</pd:from>
            <pd:to>End Checkpoint</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Repeat on Error</pd:from>
            <pd:to>Log Error</pd:to>
            <pd:xpathDescription>Error</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($Map-Error-Data)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>End Checkpoint</pd:from>
            <pd:to>Audit End</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Assign">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>259</pd:x>
            <pd:y>253</pd:y>
            <config>
                <variableName>InputSchema</variableName>
            </config>
            <pd:inputBindings>
                <transaction>
                    <startTime>
                        <xsl:value-of select="number(tib:timestamp())"/>
                    </startTime>
                    <transactionId>
                        <xsl:value-of select="if (string-length(tib:trim($Start/pfx:MainProcessInput/ns:Header/ns:TransactionID)) > 0) then &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:TransactionID else Util:getGUID()"/>
                    </transactionId>
                    <objectId>
                        <xsl:value-of select="if (string-length(tib:trim($Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID)) > 0) then &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID else &quot;-1&quot;"/>
                    </objectId>
                    <xsl:if test="$Start/pfx:MainProcessInput/pfx:AuditInputMsg = &quot;true&quot;">
                        <inputXML>
                            <xsl:value-of select="tib:if-absent(tib:render-xml($Start/pfx:MainProcessInput/pfx:Input/*, false(), true()), &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:Transaction)"/>
                        </inputXML>
                    </xsl:if>
                </transaction>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Audit Start">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>359</pd:x>
            <pd:y>65</pd:y>
            <config>
                <processName>/UtilityServices/Auditing/AuditStart.process</processName>
            </config>
            <pd:inputBindings>
                <pfx2:LogRequest>
                    <ns:Header>
                        <ns:ApplicationID>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ApplicationID"/>
                        </ns:ApplicationID>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName">
                            <ns:ComponentName>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName"/>
                            </ns:ComponentName>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname">
                            <ns:Hostname>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname"/>
                            </ns:Hostname>
                        </xsl:if>
                        <ns:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns:Timestamp>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain">
                            <ns:TransactionDomain>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain"/>
                            </ns:TransactionDomain>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType">
                            <ns:TransactionType>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType"/>
                            </ns:TransactionType>
                        </xsl:if>
                        <ns:TransactionID>
                            <xsl:value-of select="$InputSchema/transaction/transactionId"/>
                        </ns:TransactionID>
                        <ns:CorrelationID>
                            <xsl:value-of select="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID"/>
                        </ns:CorrelationID>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID">
                            <ns:InterfaceID>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID"/>
                            </ns:InterfaceID>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Filename">
                            <ns:Filename>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Filename"/>
                            </ns:Filename>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Message">
                            <ns:Message>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Message"/>
                            </ns:Message>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID">
                            <ns:RenderID>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID"/>
                            </ns:RenderID>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding">
                            <ns:DataEncoding>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding"/>
                            </ns:DataEncoding>
                        </xsl:if>
                        <xsl:if test="$InputSchema/transaction/inputXML">
                            <ns:Transaction>
                                <xsl:value-of select="$InputSchema/transaction/inputXML"/>
                            </ns:Transaction>
                        </xsl:if>
                        <xsl:copy-of select="$Start/pfx:MainProcessInput/ns:Header/ns:AltKey"/>
                    </ns:Header>
                    <Audit>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/COE/Auditing/GLB_AuditStart"/>
                    </Audit>
                </pfx2:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="StartUp">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>260</pd:x>
            <pd:y>65</pd:y>
            <config>
                <processName>/UtilityServices/Initialization/StartUp.process</processName>
            </config>
            <pd:inputBindings>
                <Input>
                    <ComponentName>
                        <xsl:value-of select="tib:if-absent($Start/pfx:MainProcessInput/ns:Header/ns:ComponentName, &#xA;$_globalVariables/ns1:GlobalVariables/Deployment)"/>
                    </ComponentName>
                    <ApplicationID>
                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ApplicationID"/>
                    </ApplicationID>
                    <TransactionID>
                        <xsl:value-of select="$InputSchema/transaction/transactionId"/>
                    </TransactionID>
                    <ObjectID>
                        <xsl:value-of select="$InputSchema/transaction/objectId"/>
                    </ObjectID>
                </Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Audit End">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>820</pd:x>
            <pd:y>65</pd:y>
            <config>
                <processName>/UtilityServices/Auditing/AuditEnd.process</processName>
            </config>
            <pd:inputBindings>
                <pfx2:LogRequest>
                    <ns:Header>
                        <ns:ApplicationID>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ApplicationID"/>
                        </ns:ApplicationID>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName">
                            <ns:ComponentName>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName"/>
                            </ns:ComponentName>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname">
                            <ns:Hostname>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname"/>
                            </ns:Hostname>
                        </xsl:if>
                        <ns:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns:Timestamp>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain">
                            <ns:TransactionDomain>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain"/>
                            </ns:TransactionDomain>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType">
                            <ns:TransactionType>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType"/>
                            </ns:TransactionType>
                        </xsl:if>
                        <ns:TransactionID>
                            <xsl:value-of select="$InputSchema/transaction/transactionId"/>
                        </ns:TransactionID>
                        <xsl:if test="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID">
                            <ns:CorrelationID>
                                <xsl:value-of select="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID"/>
                            </ns:CorrelationID>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID">
                            <ns:InterfaceID>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID"/>
                            </ns:InterfaceID>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Filename">
                            <ns:Filename>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Filename"/>
                            </ns:Filename>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Message">
                            <ns:Message>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Message"/>
                            </ns:Message>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID">
                            <ns:RenderID>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID"/>
                            </ns:RenderID>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding">
                            <ns:DataEncoding>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding"/>
                            </ns:DataEncoding>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/pfx:AuditOutputMsg = &quot;true&quot;">
                            <xsl:choose>
                                <xsl:when test="exists($_error)">
                                    <ns:Transaction>
                                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport, false(), true())"/>
                                    </ns:Transaction>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns:Transaction>
                                        <xsl:value-of select="tib:render-xml($Call-Actual-Process/pfx:MainProcessOutput/pfx:Output/*, false(), true())"/>
                                    </ns:Transaction>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                        <xsl:copy-of select="$Start/pfx:MainProcessInput/ns:Header/ns:AltKey"/>
                    </ns:Header>
                    <TimeDuration>
                        <xsl:value-of select="number(tib:timestamp()) - $InputSchema/transaction/startTime"/>
                    </TimeDuration>
                    <xsl:choose>
                        <xsl:when test="exists($_error)">
                            <Status>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/COE/Messages/OverallStatus/GLB_Error"/>
                            </Status>
                        </xsl:when>
                        <xsl:otherwise>
                            <Status>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/COE/Messages/OverallStatus/GLB_Success"/>
                            </Status>
                        </xsl:otherwise>
                    </xsl:choose>
                    <Audit>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/COE/Auditing/GLB_AuditEnd"/>
                    </Audit>
                </pfx2:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log Error">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>721</pd:x>
            <pd:y>298</pd:y>
            <config>
                <processName>/UtilityServices/Logging/LogException.process</processName>
            </config>
            <pd:inputBindings>
                <pfx:ErrorSchema>
                    <pfx:ProcessName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </pfx:ProcessName>
                    <pfx:CLELogging>
                        <xsl:value-of select="true()"/>
                    </pfx:CLELogging>
                    <pfx:ExceptionDateTime>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx:ExceptionDateTime>
                    <ns:Header>
                        <ns:ApplicationID>
                            <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ApplicationID"/>
                        </ns:ApplicationID>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName">
                            <ns:ComponentName>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName"/>
                            </ns:ComponentName>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname">
                            <ns:Hostname>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname"/>
                            </ns:Hostname>
                        </xsl:if>
                        <ns:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns:Timestamp>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain">
                            <ns:TransactionDomain>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain"/>
                            </ns:TransactionDomain>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType">
                            <ns:TransactionType>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType"/>
                            </ns:TransactionType>
                        </xsl:if>
                        <ns:TransactionID>
                            <xsl:value-of select="$InputSchema/transaction/transactionId"/>
                        </ns:TransactionID>
                        <xsl:if test="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID">
                            <ns:CorrelationID>
                                <xsl:value-of select="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID"/>
                            </ns:CorrelationID>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID">
                            <ns:InterfaceID>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID"/>
                            </ns:InterfaceID>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Filename">
                            <ns:Filename>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Filename"/>
                            </ns:Filename>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Message">
                            <ns:Message>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Message"/>
                            </ns:Message>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID">
                            <ns:RenderID>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID"/>
                            </ns:RenderID>
                        </xsl:if>
                        <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding">
                            <ns:DataEncoding>
                                <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding"/>
                            </ns:DataEncoding>
                        </xsl:if>
                        <xsl:if test="$InputSchema/transaction/inputXML">
                            <ns:Transaction>
                                <xsl:value-of select="$InputSchema/transaction/inputXML"/>
                            </ns:Transaction>
                        </xsl:if>
                        <xsl:copy-of select="$Start/pfx:MainProcessInput/ns:Header/ns:AltKey"/>
                    </ns:Header>
                    <xsl:copy-of select="$Map-Error-Data/Data/pfx:ErrorReport"/>
                    <pfx:ErrorMessage>
                        <xsl:value-of select="tib:concat-sequence-format($ErrorData/AccumulatedOutput/Data/pfx:ErrorReport/pfx:Msg, &quot;,&quot;, true())"/>
                    </pfx:ErrorMessage>
                </pfx:ErrorSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ShutDown">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>822</pd:x>
            <pd:y>249</pd:y>
            <config>
                <processName>/UtilityServices/Initialization/ShutDown.process</processName>
            </config>
            <pd:inputBindings>
                <Input>
                    <ProcessID>
                        <xsl:value-of select="$_processContext/ns2:ProcessContext/ProcessId"/>
                    </ProcessID>
                </Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Begin Checkpoint">
            <pd:type>com.tibco.pe.core.CheckpointActivity</pd:type>
            <pd:resourceType>ae.process.checkpoint</pd:resourceType>
            <pd:x>475</pd:x>
            <pd:y>65</pd:y>
            <config/>
            <pd:inputBindings>
                <ns3:input/>
            </pd:inputBindings>
        </pd:activity>
        <pd:group name="Repeat on Error">
            <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
            <pd:resourceType>ae.process.group</pd:resourceType>
            <pd:x>303</pd:x>
            <pd:y>135</pd:y>
            <pd:width>357</pd:width>
            <pd:height>309</pd:height>
            <pd:collapsedWidth>57</pd:collapsedWidth>
            <pd:collapsedHeight>70</pd:collapsedHeight>
            <pd:groupVariables/>
            <pd:joinToggle>inherit</pd:joinToggle>
            <config>
                <pd:groupType>repeat</pd:groupType>
                <pd:serializable>false</pd:serializable>
                <pd:indexSlot>i</pd:indexSlot>
                <pd:outSlot>ErrorData</pd:outSlot>
                <pd:activityOutputName>Map Error Data</pd:activityOutputName>
                <pd:repeatCondition>($i &gt;= $_globalVariables/ns1:GlobalVariables/COE/Retry/GLB_SystemRetryCount) or 
contains(upper-case($Map-Error-Data/Data/pfx:ErrorReport/pfx:MsgCode), 
upper-case($_globalVariables/ns1:GlobalVariables/COE/ErrorCodeType/GLB_BusinessCode)) or 
($Call-Actual-Process/pfx:MainProcessOutput/pfx:Status = 0) or 
not(exists($Map-Error-Data/Data/pfx:ErrorReport))</pd:repeatCondition>
                <pd:accumulateOutput>true</pd:accumulateOutput>
            </config>
            <pd:inputBindings/>
            <pd:expanded>true</pd:expanded>
            <pd:transition>
                <pd:from>start</pd:from>
                <pd:to>Transaction</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Log Message</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>otherwise</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Transaction</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Sleep</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Map Error Data</pd:from>
                <pd:to>Log Message</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Log Message</pd:from>
                <pd:to>Sleep</pd:to>
                <pd:xpathDescription>System Error</pd:xpathDescription>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>xpath</pd:conditionType>
                <pd:xpath>contains(upper-case($Map-Error-Data/Data/pfx:ErrorReport/pfx:MsgCode), 
upper-case($_globalVariables/ns1:GlobalVariables/COE/ErrorCodeType/GLB_SystemCode)) or 
$_globalVariables/ns1:GlobalVariables/COE/Retry/GLB_SystemRetryCount !=1</pd:xpath>
            </pd:transition>
            <pd:transition>
                <pd:from>Transaction</pd:from>
                <pd:to>Map Error Data</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>error</pd:conditionType>
            </pd:transition>
            <pd:group name="Transaction">
                <pd:type>com.tibco.pe.core.TransactionGroup</pd:type>
                <pd:resourceType>ae.process.group</pd:resourceType>
                <pd:x>414</pd:x>
                <pd:y>162</pd:y>
                <pd:width>133</pd:width>
                <pd:height>155</pd:height>
                <pd:collapsedWidth>57</pd:collapsedWidth>
                <pd:collapsedHeight>70</pd:collapsedHeight>
                <pd:groupVariables/>
                <pd:joinToggle>inherit</pd:joinToggle>
                <config>
                    <pd:groupType>transactionGroup</pd:groupType>
                    <pd:serializable>false</pd:serializable>
                    <pd:transactionType>JDBCTransaction</pd:transactionType>
                    <pd:includeCheckpoint>false</pd:includeCheckpoint>
                </config>
                <pd:inputBindings/>
                <pd:expanded>true</pd:expanded>
                <pd:transition>
                    <pd:from>start</pd:from>
                    <pd:to>Call Actual Process</pd:to>
                    <pd:lineType>Default</pd:lineType>
                    <pd:lineColor>-16777216</pd:lineColor>
                    <pd:conditionType>always</pd:conditionType>
                </pd:transition>
                <pd:transition>
                    <pd:from>Call Actual Process</pd:from>
                    <pd:to>end</pd:to>
                    <pd:lineType>Default</pd:lineType>
                    <pd:lineColor>-16777216</pd:lineColor>
                    <pd:conditionType>always</pd:conditionType>
                </pd:transition>
                <pd:activity name="Call Actual Process">
                    <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
                    <pd:resourceType>ae.process.subprocess</pd:resourceType>
                    <pd:x>473</pd:x>
                    <pd:y>247</pd:y>
                    <config>
                        <processName>/UtilityServices/Patterns/HeavyPattern/BusinessProcess.process</processName>
                        <processNameXPath>$Start/pfx:MainProcessInput/pfx:ActualProcess</processNameXPath>
                    </config>
                    <pd:inputBindings>
                        <Data>
                            <pfx:Input>
                                <xsl:copy-of select="$Start/pfx:MainProcessInput/pfx:Input/*"/>
                            </pfx:Input>
                        </Data>
                    </pd:inputBindings>
                </pd:activity>
            </pd:group>
            <pd:activity name="Map Error Data">
                <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
                <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
                <pd:x>354</pd:x>
                <pd:y>386</pd:y>
                <config>
                    <element>
                        <xsd:element name="Data">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element ref="pfx:ErrorReport"/>
                                    <xsd:element name="retryCounterSet" type="xsd:boolean"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </element>
                </config>
                <pd:inputBindings>
                    <Data>
                        <pfx:ErrorReport>
                            <pfx:StackTrace>
                                <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                            </pfx:StackTrace>
                            <pfx:Msg>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                            </pfx:Msg>
                            <pfx:FullClass>
                                <xsl:value-of select="$_error/ns2:ErrorReport/FullClass"/>
                            </pfx:FullClass>
                            <pfx:Class>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Class"/>
                            </pfx:Class>
                            <pfx:ProcessStack>
                                <xsl:value-of select="$_error/ns2:ErrorReport/ProcessStack"/>
                            </pfx:ProcessStack>
                            <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                                <pfx:MsgCode>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                </pfx:MsgCode>
                            </xsl:if>
                            <pfx:Data>
                                <xsl:copy-of select="$_error/ns2:ErrorReport/Data/*"/>
                            </pfx:Data>
                        </pfx:ErrorReport>
                        <retryCounterSet>
                            <xsl:value-of select="Util:setProperty($_processContext/ns2:ProcessContext/ProcessId, &quot;RETRYCOUNTER&quot;, $i)"/>
                        </retryCounterSet>
                    </Data>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="Log Message">
                <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
                <pd:resourceType>ae.process.subprocess</pd:resourceType>
                <pd:x>465</pd:x>
                <pd:y>386</pd:y>
                <config>
                    <processName>/UtilityServices/Logging/LogMessage.process</processName>
                </config>
                <pd:inputBindings>
                    <Input>
                        <pfx2:LogRequest>
                            <ns:Header>
                                <ns:ApplicationID>
                                    <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ApplicationID"/>
                                </ns:ApplicationID>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName">
                                    <ns:ComponentName>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:ComponentName"/>
                                    </ns:ComponentName>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname">
                                    <ns:Hostname>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Hostname"/>
                                    </ns:Hostname>
                                </xsl:if>
                                <ns:Timestamp>
                                    <xsl:value-of select="current-dateTime()"/>
                                </ns:Timestamp>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain">
                                    <ns:TransactionDomain>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionDomain"/>
                                    </ns:TransactionDomain>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType">
                                    <ns:TransactionType>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:TransactionType"/>
                                    </ns:TransactionType>
                                </xsl:if>
                                <ns:TransactionID>
                                    <xsl:value-of select="$InputSchema/transaction/transactionId"/>
                                </ns:TransactionID>
                                <xsl:if test="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID">
                                    <ns:CorrelationID>
                                        <xsl:value-of select="if ($InputSchema/transaction/objectId !=-1) then $InputSchema/transaction/objectId else &#xA;$Start/pfx:MainProcessInput/ns:Header/ns:CorrelationID"/>
                                    </ns:CorrelationID>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID">
                                    <ns:InterfaceID>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:InterfaceID"/>
                                    </ns:InterfaceID>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Filename">
                                    <ns:Filename>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Filename"/>
                                    </ns:Filename>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:Message">
                                    <ns:Message>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:Message"/>
                                    </ns:Message>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID">
                                    <ns:RenderID>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:RenderID"/>
                                    </ns:RenderID>
                                </xsl:if>
                                <xsl:if test="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding">
                                    <ns:DataEncoding>
                                        <xsl:value-of select="$Start/pfx:MainProcessInput/ns:Header/ns:DataEncoding"/>
                                    </ns:DataEncoding>
                                </xsl:if>
                                <xsl:if test="$InputSchema/transaction/inputXML">
                                    <ns:Transaction>
                                        <xsl:value-of select="$InputSchema/transaction/inputXML"/>
                                    </ns:Transaction>
                                </xsl:if>
                                <xsl:copy-of select="$Start/pfx:MainProcessInput/ns:Header/ns:AltKey"/>
                            </ns:Header>
                            <Audit>
                                <xsl:value-of select="true()"/>
                            </Audit>
                        </pfx2:LogRequest>
                        <ProcessName>
                            <xsl:value-of select="Util:getProcessName($_processContext/ns2:ProcessContext/ProcessId)"/>
                        </ProcessName>
                        <LogDateTime>
                            <xsl:value-of select="current-dateTime()"/>
                        </LogDateTime>
                        <Severity>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/COE/LogLevels/GLB_ERROR"/>
                        </Severity>
                        <CLELogging>
                            <xsl:value-of select="false()"/>
                        </CLELogging>
                        <Message>
                            <xsl:value-of select="concat($_error/ns2:ErrorReport/Msg, &quot; Retried: &quot;, $i)"/>
                        </Message>
                        <pfx:Input>
                            <xsl:copy-of select="$_error/ns2:ErrorReport"/>
                        </pfx:Input>
                    </Input>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="Sleep">
                <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
                <pd:resourceType>ae.activities.sleep</pd:resourceType>
                <pd:x>593</pd:x>
                <pd:y>386</pd:y>
                <config/>
                <pd:inputBindings>
                    <ns0:SleepInputSchema>
                        <IntervalInMillisec>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/COE/Retry/GLB_SystemSleepInterval"/>
                        </IntervalInMillisec>
                    </ns0:SleepInputSchema>
                </pd:inputBindings>
            </pd:activity>
        </pd:group>
        <pd:activity name="End Checkpoint">
            <pd:type>com.tibco.pe.core.CheckpointActivity</pd:type>
            <pd:resourceType>ae.process.checkpoint</pd:resourceType>
            <pd:x>719</pd:x>
            <pd:y>65</pd:y>
            <config/>
            <pd:inputBindings>
                <ns3:input/>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Log Exception</pd:from>
        <pd:to>Stop Engine</pd:to>
        <pd:xpathDescription>Stop Engine</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns1:GlobalVariables/COE/GLB_StopEngineOnError = "true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Stop Engine</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Exception</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Catch Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch Exception</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch Exception</pd:from>
        <pd:to>Log Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>